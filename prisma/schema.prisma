// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Goal {
  id           String    @id @default(uuid())
  name         String
  created_at   DateTime  @default(now())
  preview_date DateTime
  current_date DateTime?
  category     String
  userId       String
  user         User      @relation(fields: [userId], references: [id])
  urlImage     String?
}

model Task {
  id        String     @id @default(uuid())
  type      String
  date      DateTime
  category  String
  priority  Int
  is_done   Boolean    @default(false)
  minitasks MiniTask[]
  userId    String
  user      User       @relation(fields: [userId], references: [id])
}

model MiniTask {
  id          String  @id @default(uuid())
  is_done     Boolean @default(false)
  description String
  task        Task    @relation(fields: [taskId], references: [id])
  taskId      String
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Goal          Goal[]
  Task          Task[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
